// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"isTrue","type":"bool"}],"name":"oracleDeclareClaim","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getState","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"claim","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"back","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"subscribe","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"anOracle","type":"address"},{"name":"aPremium","type":"uint256"},{"name":"prot","type":"uint256"},{"name":"ttl","type":"uint256"}],"name":"init","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260006007908155600160085560026009556003600a556004600b556005600c556006600d55600e5560058054600160a060020a031916331790556000600655610339806100516000396000f3606060405236156100565760e060020a600035046317998c6b81146100585780631865c57d1461006e5780634e71d92d1461007b5780638dde0840146100c25780638f449a05146100d557806398c36c09146100e8575b005b610056600435600654600b54146102ad57610002565b6006546060908152602090f35b61005660105442111561027957600c54600655600354600254600160a060020a039190911690600090606082818181858883f15050600554600160a060020a031692505050ff5b6100566006546009541461020157610002565b6100566006546008541461019557610002565b6100566004356024356044356064356007546006546000911461010a57610002565b60018054600160a060020a031916861790819055670de0b6b3a764000080860283558402600255600f839055600160a060020a031681148015906101585750670de0b6b3a764000084028114155b801561016e5750670de0b6b3a764000083028114155b801561017a5750818114155b905080151561018857610002565b6008546006555050505050565b60015433600160a060020a03908116911614156101b157610002565b6000543414156101fc5760048054600160a060020a03191633179055600954600655600554600160a060020a031660006702c68af0bb140000606082818181858883f150505050505b565b610002565b60015433600160a060020a039081169116141561021d57610002565b6002543414156101fc5760038054600160a060020a03191633179081905560008054600160a060020a0392909216916702c68af0bb13ffff1901606082818181858883f15050600a546006555050600f544201601055506101fa565b600654600a541461028957610002565b600454600160a060020a0390811633909116146102a557610002565b600b54600655565b60015433600160a060020a039081169116146102c857610002565b80156102ff57600454600254600160a060020a039190911690600090606082818181858883f15050600d546006555061032b915050565b600e54600655600354600254600160a060020a039190911690600090606082818181858883f150505050505b600554600160a060020a0316ff",
    unlinked_binary: "606060405260006007908155600160085560026009556003600a556004600b556005600c556006600d55600e5560058054600160a060020a031916331790556000600655610339806100516000396000f3606060405236156100565760e060020a600035046317998c6b81146100585780631865c57d1461006e5780634e71d92d1461007b5780638dde0840146100c25780638f449a05146100d557806398c36c09146100e8575b005b610056600435600654600b54146102ad57610002565b6006546060908152602090f35b61005660105442111561027957600c54600655600354600254600160a060020a039190911690600090606082818181858883f15050600554600160a060020a031692505050ff5b6100566006546009541461020157610002565b6100566006546008541461019557610002565b6100566004356024356044356064356007546006546000911461010a57610002565b60018054600160a060020a031916861790819055670de0b6b3a764000080860283558402600255600f839055600160a060020a031681148015906101585750670de0b6b3a764000084028114155b801561016e5750670de0b6b3a764000083028114155b801561017a5750818114155b905080151561018857610002565b6008546006555050505050565b60015433600160a060020a03908116911614156101b157610002565b6000543414156101fc5760048054600160a060020a03191633179055600954600655600554600160a060020a031660006702c68af0bb140000606082818181858883f150505050505b565b610002565b60015433600160a060020a039081169116141561021d57610002565b6002543414156101fc5760038054600160a060020a03191633179081905560008054600160a060020a0392909216916702c68af0bb13ffff1901606082818181858883f15050600a546006555050600f544201601055506101fa565b600654600a541461028957610002565b600454600160a060020a0390811633909116146102a557610002565b600b54600655565b60015433600160a060020a039081169116146102c857610002565b80156102ff57600454600254600160a060020a039190911690600090606082818181858883f15050600d546006555061032b915050565b600e54600655600354600254600160a060020a039190911690600090606082818181858883f150505050505b600554600160a060020a0316ff",
    address: "0x03a2eba76f8b301446083dbede7507639d98d9de",
    generated_with: "2.0.6",
    contract_name: "Insurance"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Insurance error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Insurance error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Insurance error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Insurance error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Insurance = Contract;
  }

})();
